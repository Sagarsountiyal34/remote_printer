<div class="">
    <div class="">
        <div class="">
            <ol class="breadcrumb">
                <li class="breadcrumb-item">
                    <a href="#">Dashboard</a>
                </li>
                <li class="breadcrumb-item active">Select Documents</li>
            </ol>
            <div id="documents_form">
                <form class="new_upload_document new_document_form" id="new_upload_document" enctype="multipart/form-data" action="<%= current_user.present? ? '/save_group' : '/save_docs'%>" accept-charset="UTF-8" method="post" group_id="">
                    <input name="utf8" type="hidden" value="âœ“"><input type="hidden" name="authenticity_token" value="/lBy4wW+drsehD1P5YX+g9/EQJAkOSWWhh+jyLtzD6W3JdkjX7hB1jHh7MJBzV7nmEPqIA4Ltc6XOsnkh5oZjg==">
                    <div id="documents_wrap">
                        <div class="document row form-group" style="margin-left: 0px;">
                            <div class="input-group col-5 col-sm-5">
                                <div class="custom-file">
                                    <input type="file" class="custom-file-input uploadDocument documentFileField" id="inputGroupFile01" aria-describedby="inputGroupFileAddon01" name="upload_document[1][document]" id="upload_document_document" data-buttonText="Your label here." aria-describedby="fileHelp" multiple>
                                    <label class="custom-file-label" for="inputGroupFile01">File</label>
                                    <style>
                                        .custom-file-label:after{
                                            content: "Browse...";
                                        }
                                    </style>
                                </div>
                            </div>
                            <div class="col-5 col-sm-5 document_name_field">
                                <div>
                                    <input autofocus="autofocus" class="form-control document_name" placeholder="Document Name" required="required" type="text" value="" name="upload_document[1][document_name]" id="upload_document_document_name">
                                </div>
                            </div>
                            <!-- <i class="fas fa-times remove_form fa-2x col-1" style="cursor:pointer;color:red;"></i> -->
                            <div class="message col-12 col-sm-12"></div>
                        </div>
                    </div>
                    <input type="hidden" name="history_document" id="history_document" value="">
                </form>
                <div id="history_list" style="display:none;">
                </div>
            </div>
            <div id="action_button_2" style="float:right;">
                <%= button_tag "Add New", :class => 'btn btn-primary main_button', :id => 'add_more_button' %>
                <% if current_user.present? %>
                <%= button_tag "Add Older", :class => 'btn btn-warn main_button', :id => 'add_more_from_history_button', :data => {:toggle => 'modal', :target => '#fromHistory'} %>
                <% end %>
            </div><br>
            <div id="action_button">
                <% if current_user.present? %>
                <%= button_tag "Submit Selected", :class => 'btn_1', :id => 'upload_submit_button' %>
                <% else %>
                <a class="btn_1" href="#" data-toggle="modal" data-target="#phoneNumberVerification2" id="continue_with_number">Submit Selected</a>
                <% end %>
            </div>
        </div>
    </div>
    <div id="loader_wrap_main" class="loader_wrap" style="display: none;">
        <img src="/images/loader.gif" id="loader_img" width="100" height="100">
    </div>
</div>
<br>
<br><br><br><br><br>
<% if current_user.present? %>
<%= render "groups/partial/from_history_main" %>
<% else %>
<%= render "groups/partial/phone_number_verification_partial_modal" %>
<% end %>
<% if current_user.present? %>
<script>
$(document).ready(function() {
    $(document).on('change', '.documentFileField', function(e) {
        var fileName = $(this).val().split('fakepath')[1].slice(1);
        //replace the "Choose a file" label
        var doc_name = fileName.split('.')[0];
        $(this).parents('.row').find('.document_name').val(doc_name);
        $(this).next('.custom-file-label').html(fileName);

        remove_empty_doc();

        var files = $(this)[0].files;
        var dT = new ClipboardEvent('').clipboardData || new DataTransfer();
        dT.items.add(files[0]);
        document.querySelector("[name='" + $(this).attr('name') + "']").files = dT.files;
        if (files.length > 1) {
            for (var i = 0; i < files.length - 1; i++) {
                if (i < files.length - 1) {
                    clone_doc_wrap();
                }
                fill_file_entry(files[i + 1]);
            }
        }
    })

    function fill_file_entry(file) {
        var first_empty_input = get_index_of_first_empty_doc() + 1;
        if (first_empty_input != 0) {
            var doc_filename_input = 'upload_document[' + first_empty_input + '][document]'
            var file_ele = $('form').find("[name='" + doc_filename_input + "']")

            var dT = new ClipboardEvent('').clipboardData || new DataTransfer();
            dT.items.add(file);

            document.querySelector("[name='" + doc_filename_input + "']").files = dT.files;
            var fileName = $(file_ele).val().split('fakepath')[1].slice(1);
            //replace the "Choose a file" label
            var doc_name = fileName.split('.')[0];
            $(file_ele).parents('.row').find('.document_name').val(doc_name);
            $(file_ele).next('.custom-file-label').html(fileName);
        }
    }

    $("#add_more_button").click(function() {
        clone_doc_wrap();
    });

    function clone_doc_wrap() {
        var new_doc = $(".document").first().clone();
        var total_doc = $('#documents_form').find('.document').length
        var label_name_for = $(new_doc).find('label').attr('for') + (total_doc + 1).toString();
        var document_name = 'upload_document[' + (total_doc + 1).toString() + '][document_name]';
        var document_name_id = $(new_doc).find('#upload_document_document_name').attr('id') + (total_doc + 1).toString();
        var document_file_name = 'upload_document[' + (total_doc + 1).toString() + '][document]';
        $(new_doc).find('input[type=text]').attr('id', document_name_id);
        $(new_doc).find('input[type=text]').attr('name', document_name).val('');
        $(new_doc).find('input[type=file]').attr('name', document_file_name).val('');
        $(new_doc).find('label').attr('for', label_name_for);
        $(new_doc).find('label[class=custom-file-label]').html('File');
        $('<i>').attr({ class: 'fas fa-times remove_form fa-2x col-1', style: "cursor:pointer;color:red;" }).insertBefore(new_doc.find('.message'));
        $('#documents_wrap').append(new_doc);
    }

    $(document).on('click', '#upload_submit_button', function(e) {
        var total_count = $('.document').length;
        var success_count = 0;
        var count = 1;
        var self = this;
        $('#loader_wrap_main').show();
        $(this).text('Please wait');
        $(this).attr('disabled', 'true');
        var check_if_valid = check_all_form_valid();
        if ($('#history_document').val() != '' && $('#new_upload_document').find('.document').length == 1) {
            check_if_valid = true
        }
        if (check_if_valid == true) {
            submitForm($('form'), onSuccess, onError);
        } else {
            $('#loader_wrap_main').hide()
            $(this).text('Submit Selected');
            $(this).removeAttr('disabled');
            notification("Please fill all entries.", "error")
        }

        function onSuccess(response) {
            $('#loader_wrap_main').hide()
            $(self).text('Submit Selected');
            $(self).removeAttr('disabled');
            fillResponse(response);
        }

        function onError(error) {
            $('#loader_wrap_main').hide()
            $(this).text('Submit Selected');
            $(this).removeAttr('disabled');
        }
    });

    function submitForm(form, success_cb, error_cb) {
        var history_data = ""
        var valuesToSubmit = new FormData(form.get(0));
        var document_ids = $('#history_list').find('.history_document').map(function() {
            return $(this).attr('id');
        }).get().join();
        valuesToSubmit.append('history_document_ids', document_ids);
        $.ajax({
            type: "POST",
            beforeSend: setCsrfToken,
            url: $(form).attr('action'), //sumbits it to the given url of the form
            data: valuesToSubmit,
            processData: false,
            contentType: false,
            success: function(response) {
                if (success_cb) success_cb(response)
            },
            error: function(error) {
                if (error_cb) error_cb(error)
            }
        });
    }

    function fillResponse(res) {
        response = res;
        Object.keys(res['message']).forEach(function(key, value) {
            var doc = $('#documents_form').find('.document').get(parseInt(key));
            var class_name = ''
            if (response['message'][key][0] == true) {
                class_name = 'success_message';
            } else {
                class_name = 'error_message';
            }
            $(doc).find('.message').text(response['message'][key][1])
            $(doc).find('.message').addClass(class_name)
        })
    }
});

function check_all_form_valid() {
    var status = true;
    $('#new_upload_document').find('.document').each(function(i, doc) {
        if ($(doc).find('input[type]:file').val() == '' || $(doc).find('input[type]:text').val() == '') {
            status = false
        }
    });
    return status;
}

function get_index_of_first_empty_doc() {
    var index = 0;
    $('#new_upload_document').find('.document').each(function(i, doc) {
        if (i == 0) { return; }
        if ($(doc).find('input[type]:file').val() == '' || $(doc).find('input[type]:text').val() == '') {
            index = i;
            return false;
        }
    });
    return index;
}

function remove_empty_doc() {
    var i = 0;
    $('#new_upload_document').find('.document').each(function(i, doc) {
        if (i == 0) { return; }
        if ($(doc).find('input[type]:file').val() == '' || $(doc).find('input[type]:text').val() == '') {
            $(this).remove();
        }
        i++;
    });
}

$(document).on('click', '.remove_form', function() {
    $(this).parent('.document').remove();

});

$(document).on('click', '.remove_history_document', function() {
    $('#history_document').val().replace($(this).siblings('.history_document').attr('id'), '')
    $(this).parent('.history_document_wrapper').remove();
});
</script>
<% end %>